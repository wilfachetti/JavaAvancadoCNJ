###
# WITH SPRING SECURITY
@host=http://localhost:8081
@user=username
@password=userpassword
###

# SIMPLE AUTH - GET ALL
GET {{host}}/api/casos
Authorization: Basic {{user}} {{password}}

# GET FOR ID
GET {{host}}/api/casos/3
Authorization: Basic {{user}} {{password}}

# CREATE NEW
POST {{host}}/api/casos
Authorization: Basic {{user}} {{password}}
Content-Type: application/json

{
    "id":"6",
    "descricao":"Caso 06"
}

# DELETE CASE
DELETE {{host}}/api/casos/6
Authorization: Basic {{user}} {{password}}


# KEYCLOAK
###
@keycloak=http://localhost:8080
@realm-token=realms/realm-cnj/protocol/openid-connect/token
@client-id=login-projeto-cnj
###

# TEST
GET {{keycloak}}

# GET TOKEN FOR AUTHENTICATION
POST {{keycloak}}/{{realm-token}}
Content-Type: application/x-www-form-urlencoded
grant_type=password&client_id={{client-id}}&username={{user}}&password={{password}}

###
@token=
@refresh-token=
###

# REFRESH TOKEN
POST {{keycloak}}/{{realm-token}}
Content-Type: application/x-www-form-urlencoded
client_id={{client-id}}&refresh_token={{refresh-token}}&grant_type=refresh_token


#
# APPLICATION WITH KEYCLOAK
#

# GET ALL
GET {{host}}/api/casos
Authorization: Bearer {{token}}

# INSERT NEW
POST {{host}}/api/casos
Authorization: Bearer {{token}}
Content-Type: application/json
{
    "descricao":"Novo caso"
}

# DELETE
DELETE {{host}}/api/casos/552
Authorization: Bearer {{token}}

# UPDATE OR ALTER
PUT {{host}}/api/casos/603
Authorization: Bearer {{token}}
Content-Type: application/json
{
    "descricao":"Caso 603"
}

# GET SPECIFIC
GET {{host}}/api/casos/603
Authorization: Bearer {{token}}

# SENDING MESSAGE RABBITMQ
POST {{host}}/api/queue
Authorization: Bearer {{token}}
Content-Type: application/raw
"Mensagem transmitida pelo httpyac"

POST {{host}}/api/queue
Authorization: Bearer {{token}}
Content-Type: application/json
{
    "descricao":"Caso RabbitMQ"
}
